"use strict";
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _reactRouterDom = require("react-router-dom");
var _DefaultLayout = _interopRequireDefault(require("../layouts/DefaultLayout"));
var _Home = _interopRequireDefault(require("../pages/Home"));
var _Moviedetails = _interopRequireDefault(require("../pages/Moviedetails"));
var _MoviesList = _interopRequireDefault(require("../pages/MoviesList"));
var _NoMatch = _interopRequireDefault(require("../pages/NoMatch"));
var _jsxRuntime = require("react/jsx-runtime");
var Routes = function Routes() {
  return (
    /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactRouterDom.BrowserRouter, {
      children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_DefaultLayout["default"], {
        children: /*#__PURE__*/(0, _jsxRuntime.jsxs)(_reactRouterDom.Switch, {
          children: [/*#__PURE__*/(0, _jsxRuntime.jsx)(_reactRouterDom.Redirect, {
            exact: true,
            from: "/films",
            to: "/movies"
          }), /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactRouterDom.Route, {
            exact: true,
            path: "/",
            children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_Home["default"], {})
          }), /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactRouterDom.Route, {
            exact: true,
            path: "/movies",
            children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_MoviesList["default"], {})
          }), /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactRouterDom.Route, {
            path: "/movies/:slug",
            children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_Moviedetails["default"], {})
          }), /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactRouterDom.Route, {
            exact: true,
            path: "/*",
            children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_NoMatch["default"], {})
          })]
        })
      })
    })
  );
};
_c = Routes;
var _default = Routes;
exports["default"] = _default;
var _c;
$RefreshReg$(_c, "Routes");
